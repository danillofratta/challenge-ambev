using Ambev.Base.Domain.Entities;
using Ambev.Base.Domain.Validation;
using Ambev.Sale.Command.Domain.Enum;
using Ambev.Sale.Command.Domain.Validation;
using System.ComponentModel.DataAnnotations.Schema;

namespace Ambev.Sale.Command.Domain.Entities;

public class Sale : BaseEntity
{
    /// <summary>
    /// It is generated by the database, but can be modified by the user later.
    /// </summary>
    [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
    public int Number { get; set; }

    /// <summary>
    /// External Identities
    /// </summary>
    public string CustomerId { get; set; }

    /// <summary>
    /// External Identities
    /// </summary>
    public string CustomerName { get; set; } = string.Empty;

    /// <summary>
    /// External Identities
    /// </summary>
    public string BranchId { get; set; }

    /// <summary>
    /// External Identities
    /// </summary>
    public string BranchName { get; set; } = string.Empty;
    public decimal TotalAmount { get; set; }
    public SaleStatus Status { get; set; } = SaleStatus.NotCancelled;
    public List<SaleItem> SaleItens { get; set; } = new()!;

    public ValidationResultDetail Validate()
    {
        var validator = new SaleBasicValidator();
        var result = validator.Validate(this);
        return new ValidationResultDetail
        {
            IsValid = result.IsValid,
            Errors = result.Errors.Select(o => (ValidationErrorDetail)o)
        };
    }

    public void Create()
    {
        Status = SaleStatus.NotCancelled;        
        UpdatedAt = DateTime.UtcNow;
    }

    public void Cancel()
    {
        Status = SaleStatus.Cancelled;
        UpdatedAt = DateTime.UtcNow;
    }
}

